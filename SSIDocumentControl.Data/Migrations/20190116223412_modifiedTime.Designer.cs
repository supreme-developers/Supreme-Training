// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSIDocumentControl.Data;

namespace SSIDocumentControl.Data.Migrations
{
    [DbContext(typeof(DocumentContext))]
    [Migration("20190116223412_modifiedTime")]
    partial class modifiedTime
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SSIDocumentControl.Core.DocumentControl.Document", b =>
                {
                    b.Property<int>("DocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DocID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnName("CreateUserID");

                    b.Property<int?>("DocStatusId")
                        .HasColumnName("DocStatusID");

                    b.Property<string>("DocumentName")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<int?>("FolderId")
                        .HasColumnName("FolderID");

                    b.Property<DateTime?>("ModifiedDatetime")
                        .HasColumnType("datetime");

                    b.Property<string>("Path")
                        .IsUnicode(false);

                    b.Property<int?>("SortId")
                        .HasColumnName("SortID");

                    b.Property<DateTime?>("UploadDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Version")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("DocId")
                        .HasName("PK_tblDocumentControl_DocStatus");

                    b.HasIndex("FolderId");

                    b.ToTable("tblDocumentControl_Documents");
                });

            modelBuilder.Entity("SSIDocumentControl.Core.DocumentControl.DocumentFolder", b =>
                {
                    b.Property<int>("FolderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FolderID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnName("CreateUserID");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int?>("ParentFolderId")
                        .HasColumnName("ParentFolderID");

                    b.Property<int?>("SortId")
                        .HasColumnName("SortID");

                    b.HasKey("FolderId");

                    b.HasIndex("ParentFolderId");

                    b.ToTable("tblDocumentControl_Folders");
                });

            modelBuilder.Entity("SSIDocumentControl.Core.DocumentControl.DocumentStatus", b =>
                {
                    b.Property<int>("DocStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DocStatusID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreateUserId")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("DocStatusId");

                    b.ToTable("tblDocumentControl_DocumentStatus");
                });

            modelBuilder.Entity("SSIDocumentControl.Core.RentUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount");

                    b.Property<bool>("Active")
                        .HasColumnName("Active");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Id");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<int?>("OfficeId");

                    b.Property<string>("Password")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PASSWORD")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'NEWUSER'");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnName("USER")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserName");

                    b.HasKey("UserId")
                        .HasName("PK_usysPasswords");

                    b.HasIndex("User")
                        .IsUnique()
                        .HasName("IX_usysPasswords");

                    b.ToTable("usysPasswords");
                });

            modelBuilder.Entity("SSIDocumentControl.Core.DocumentControl.Document", b =>
                {
                    b.HasOne("SSIDocumentControl.Core.DocumentControl.DocumentFolder", "Folder")
                        .WithMany("Document")
                        .HasForeignKey("FolderId")
                        .HasConstraintName("FK_tblDocumentControl_Documents_tblDocumentControl_Documents");
                });

            modelBuilder.Entity("SSIDocumentControl.Core.DocumentControl.DocumentFolder", b =>
                {
                    b.HasOne("SSIDocumentControl.Core.DocumentControl.DocumentFolder", "ParentFolder")
                        .WithMany("InverseParentFolder")
                        .HasForeignKey("ParentFolderId")
                        .HasConstraintName("FK_tblDocumentControl_Folders_tblDocumentControl_Folders");
                });
#pragma warning restore 612, 618
        }
    }
}
