//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SSIWebTraining.Objects.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SSITrainingEntities : DbContext
    {
        public SSITrainingEntities()
            : base("name=SSITrainingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Competency> Competencies { get; set; }
        public virtual DbSet<CompetencyDefHeader> CompetencyDefHeaders { get; set; }
        public virtual DbSet<CompetencyGroup> CompetencyGroups { get; set; }
        public virtual DbSet<tblCACompetency_Status> tblCACompetency_Status { get; set; }
        public virtual DbSet<CompetencyType> CompetencyTypes { get; set; }
        public virtual DbSet<CompetencyTask> CompetencyTasks { get; set; }
        public virtual DbSet<EmployeeAssessmentDetail> EmployeeAssessmentDetails { get; set; }
        public virtual DbSet<EmployeeAssessmentHeader> EmployeeAssessmentHeaders { get; set; }
        public virtual DbSet<tblCACompetency_ManagerAccess> tblCACompetency_ManagerAccess { get; set; }
        public virtual DbSet<CompetencyResponsibility> CompetencyResponsibilities { get; set; }
        public virtual DbSet<CompetencyJobRole> CompetencyJobRoles { get; set; }
        public virtual DbSet<CompetencyJobTitle> CompetencyJobTitles { get; set; }
        public virtual DbSet<TrainingTypes> TrainingTypes { get; set; }
    
        public virtual ObjectResult<Nullable<int>> sp_CACompetency_AddEditCompetency(Nullable<int> competencyID, Nullable<int> competencyGroupID, string question, string answer, Nullable<int> competencyTypeID, Nullable<int> levelID, Nullable<int> userID)
        {
            var competencyIDParameter = competencyID.HasValue ?
                new ObjectParameter("CompetencyID", competencyID) :
                new ObjectParameter("CompetencyID", typeof(int));
    
            var competencyGroupIDParameter = competencyGroupID.HasValue ?
                new ObjectParameter("CompetencyGroupID", competencyGroupID) :
                new ObjectParameter("CompetencyGroupID", typeof(int));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            var competencyTypeIDParameter = competencyTypeID.HasValue ?
                new ObjectParameter("CompetencyTypeID", competencyTypeID) :
                new ObjectParameter("CompetencyTypeID", typeof(int));
    
            var levelIDParameter = levelID.HasValue ?
                new ObjectParameter("LevelID", levelID) :
                new ObjectParameter("LevelID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_CACompetency_AddEditCompetency", competencyIDParameter, competencyGroupIDParameter, questionParameter, answerParameter, competencyTypeIDParameter, levelIDParameter, userIDParameter);
        }
    
        public virtual int sp_CACompetency_SetStatus(Nullable<int> compID, string statusCode)
        {
            var compIDParameter = compID.HasValue ?
                new ObjectParameter("CompID", compID) :
                new ObjectParameter("CompID", typeof(int));
    
            var statusCodeParameter = statusCode != null ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CACompetency_SetStatus", compIDParameter, statusCodeParameter);
        }
    
        public virtual int sp_CACompetency_InsertCompetencyDefDetail(Nullable<int> compDefHeaderID, Nullable<int> competencyID, Nullable<int> userID)
        {
            var compDefHeaderIDParameter = compDefHeaderID.HasValue ?
                new ObjectParameter("CompDefHeaderID", compDefHeaderID) :
                new ObjectParameter("CompDefHeaderID", typeof(int));
    
            var competencyIDParameter = competencyID.HasValue ?
                new ObjectParameter("CompetencyID", competencyID) :
                new ObjectParameter("CompetencyID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CACompetency_InsertCompetencyDefDetail", compDefHeaderIDParameter, competencyIDParameter, userIDParameter);
        }
    
        public virtual int sp_CACompetency_RemoveCompfromDefinition(Nullable<int> competencyID, Nullable<int> competencyDefHeaderID, Nullable<int> userID)
        {
            var competencyIDParameter = competencyID.HasValue ?
                new ObjectParameter("CompetencyID", competencyID) :
                new ObjectParameter("CompetencyID", typeof(int));
    
            var competencyDefHeaderIDParameter = competencyDefHeaderID.HasValue ?
                new ObjectParameter("CompetencyDefHeaderID", competencyDefHeaderID) :
                new ObjectParameter("CompetencyDefHeaderID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CACompetency_RemoveCompfromDefinition", competencyIDParameter, competencyDefHeaderIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<sp_CACompetency_GetCompetencyDefinitions_Result> sp_CACompetency_GetCompetencyDefinitions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetCompetencyDefinitions_Result>("sp_CACompetency_GetCompetencyDefinitions");
        }
    
        public virtual int CompetencyHeader(Nullable<int> compDefHeaderID)
        {
            var compDefHeaderIDParameter = compDefHeaderID.HasValue ?
                new ObjectParameter("CompDefHeaderID", compDefHeaderID) :
                new ObjectParameter("CompDefHeaderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompetencyHeader", compDefHeaderIDParameter);
        }
    
        public virtual int sp_CACompetency_RemoveCompetencyDefinition(Nullable<int> compDefHeaderID, Nullable<int> userID)
        {
            var compDefHeaderIDParameter = compDefHeaderID.HasValue ?
                new ObjectParameter("CompDefHeaderID", compDefHeaderID) :
                new ObjectParameter("CompDefHeaderID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CACompetency_RemoveCompetencyDefinition", compDefHeaderIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<sp_CACompetency_GetManagerEmployees_Result> sp_CACompetency_GetManagerEmployees(Nullable<int> managerUserID)
        {
            var managerUserIDParameter = managerUserID.HasValue ?
                new ObjectParameter("ManagerUserID", managerUserID) :
                new ObjectParameter("ManagerUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetManagerEmployees_Result>("sp_CACompetency_GetManagerEmployees", managerUserIDParameter);
        }
    
        public virtual ObjectResult<sp_CACompetency_GetEmployeeCompetencies_Result> sp_CACompetency_GetEmployeeCompetencies(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetEmployeeCompetencies_Result>("sp_CACompetency_GetEmployeeCompetencies", employeeIDParameter);
        }
    
        public virtual int sp_CACompetency_UpdateSorts(Nullable<int> oldSort, Nullable<int> newSort, Nullable<int> compDefHeaderID, Nullable<int> userID)
        {
            var oldSortParameter = oldSort.HasValue ?
                new ObjectParameter("oldSort", oldSort) :
                new ObjectParameter("oldSort", typeof(int));
    
            var newSortParameter = newSort.HasValue ?
                new ObjectParameter("newSort", newSort) :
                new ObjectParameter("newSort", typeof(int));
    
            var compDefHeaderIDParameter = compDefHeaderID.HasValue ?
                new ObjectParameter("CompDefHeaderID", compDefHeaderID) :
                new ObjectParameter("CompDefHeaderID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CACompetency_UpdateSorts", oldSortParameter, newSortParameter, compDefHeaderIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<sp_CACompetency_GetCompetencyHeaderDetails_Result> sp_CACompetency_GetCompetencyHeaderDetails(Nullable<int> compDefHeaderID)
        {
            var compDefHeaderIDParameter = compDefHeaderID.HasValue ?
                new ObjectParameter("CompDefHeaderID", compDefHeaderID) :
                new ObjectParameter("CompDefHeaderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetCompetencyHeaderDetails_Result>("sp_CACompetency_GetCompetencyHeaderDetails", compDefHeaderIDParameter);
        }
    
        public virtual int sp_CACompetency_DeleteTask(Nullable<int> compDefTaskID, Nullable<int> compDefHeaderID, Nullable<int> userID)
        {
            var compDefTaskIDParameter = compDefTaskID.HasValue ?
                new ObjectParameter("CompDefTaskID", compDefTaskID) :
                new ObjectParameter("CompDefTaskID", typeof(int));
    
            var compDefHeaderIDParameter = compDefHeaderID.HasValue ?
                new ObjectParameter("CompDefHeaderID", compDefHeaderID) :
                new ObjectParameter("CompDefHeaderID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CACompetency_DeleteTask", compDefTaskIDParameter, compDefHeaderIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<sp_CACompetency_GetAssessors_Result> sp_CACompetency_GetAssessors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetAssessors_Result>("sp_CACompetency_GetAssessors");
        }
    
        public virtual ObjectResult<sp_CACompetency_GetManagerJobQualification_Access_Result> sp_CACompetency_GetManagerJobQualification_Access(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetManagerJobQualification_Access_Result>("sp_CACompetency_GetManagerJobQualification_Access", employeeIDParameter);
        }
    
        public virtual ObjectResult<sp_CACompetency_GetManagerJobRoles_Access_Result> sp_CACompetency_GetManagerJobRoles_Access(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetManagerJobRoles_Access_Result>("sp_CACompetency_GetManagerJobRoles_Access", employeeIDParameter);
        }
    
        public virtual ObjectResult<sp_CACompetency_GetManagerJobTitle_Access_Result> sp_CACompetency_GetManagerJobTitle_Access(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetManagerJobTitle_Access_Result>("sp_CACompetency_GetManagerJobTitle_Access", employeeIDParameter);
        }
    
        public virtual int sp_CACompetency_CompetencyDefHeader_Update(Nullable<int> compDefHeaderID, string jobTitles, string jobRoles, string jobResponsibilities, string description, Nullable<short> notifyDays, string notifyEmail, Nullable<short> recurrenceQty, Nullable<int> uOMSchedulingRecurrenceID, Nullable<int> userID, Nullable<int> trainingTypeID)
        {
            var compDefHeaderIDParameter = compDefHeaderID.HasValue ?
                new ObjectParameter("CompDefHeaderID", compDefHeaderID) :
                new ObjectParameter("CompDefHeaderID", typeof(int));
    
            var jobTitlesParameter = jobTitles != null ?
                new ObjectParameter("JobTitles", jobTitles) :
                new ObjectParameter("JobTitles", typeof(string));
    
            var jobRolesParameter = jobRoles != null ?
                new ObjectParameter("JobRoles", jobRoles) :
                new ObjectParameter("JobRoles", typeof(string));
    
            var jobResponsibilitiesParameter = jobResponsibilities != null ?
                new ObjectParameter("JobResponsibilities", jobResponsibilities) :
                new ObjectParameter("JobResponsibilities", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var notifyDaysParameter = notifyDays.HasValue ?
                new ObjectParameter("NotifyDays", notifyDays) :
                new ObjectParameter("NotifyDays", typeof(short));
    
            var notifyEmailParameter = notifyEmail != null ?
                new ObjectParameter("NotifyEmail", notifyEmail) :
                new ObjectParameter("NotifyEmail", typeof(string));
    
            var recurrenceQtyParameter = recurrenceQty.HasValue ?
                new ObjectParameter("RecurrenceQty", recurrenceQty) :
                new ObjectParameter("RecurrenceQty", typeof(short));
    
            var uOMSchedulingRecurrenceIDParameter = uOMSchedulingRecurrenceID.HasValue ?
                new ObjectParameter("UOMSchedulingRecurrenceID", uOMSchedulingRecurrenceID) :
                new ObjectParameter("UOMSchedulingRecurrenceID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var trainingTypeIDParameter = trainingTypeID.HasValue ?
                new ObjectParameter("TrainingTypeID", trainingTypeID) :
                new ObjectParameter("TrainingTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CACompetency_CompetencyDefHeader_Update", compDefHeaderIDParameter, jobTitlesParameter, jobRolesParameter, jobResponsibilitiesParameter, descriptionParameter, notifyDaysParameter, notifyEmailParameter, recurrenceQtyParameter, uOMSchedulingRecurrenceIDParameter, userIDParameter, trainingTypeIDParameter);
        }
    
        public virtual int sp_CACompetency_ManagerAssignments_Add(Nullable<int> objectID, string objectType, Nullable<int> employeeID, Nullable<int> userID)
        {
            var objectIDParameter = objectID.HasValue ?
                new ObjectParameter("ObjectID", objectID) :
                new ObjectParameter("ObjectID", typeof(int));
    
            var objectTypeParameter = objectType != null ?
                new ObjectParameter("ObjectType", objectType) :
                new ObjectParameter("ObjectType", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CACompetency_ManagerAssignments_Add", objectIDParameter, objectTypeParameter, employeeIDParameter, userIDParameter);
        }
    
        public virtual int sp_CACompetency_ManagerAssignments_Remove(Nullable<int> objectID, string objectType, Nullable<int> employeeID, Nullable<int> userID)
        {
            var objectIDParameter = objectID.HasValue ?
                new ObjectParameter("ObjectID", objectID) :
                new ObjectParameter("ObjectID", typeof(int));
    
            var objectTypeParameter = objectType != null ?
                new ObjectParameter("ObjectType", objectType) :
                new ObjectParameter("ObjectType", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CACompetency_ManagerAssignments_Remove", objectIDParameter, objectTypeParameter, employeeIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<sp_CACompetency_GetActiveEmployees_Result> sp_CACompetency_GetActiveEmployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetActiveEmployees_Result>("sp_CACompetency_GetActiveEmployees");
        }
    
        public virtual ObjectResult<sp_CACompetency_GetAllAssessors_Result> sp_CACompetency_GetAllAssessors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetAllAssessors_Result>("sp_CACompetency_GetAllAssessors");
        }
    
        public virtual ObjectResult<sp_CACompetency_GetSnapshotEmployees_Result> sp_CACompetency_GetSnapshotEmployees(Nullable<int> userID, Nullable<bool> isAdmin)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("isAdmin", isAdmin) :
                new ObjectParameter("isAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetSnapshotEmployees_Result>("sp_CACompetency_GetSnapshotEmployees", userIDParameter, isAdminParameter);
        }
    
        public virtual ObjectResult<sp_CACompetency_GetAllEmployeeCompetencies_Result1> sp_CACompetency_GetAllEmployeeCompetencies(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetAllEmployeeCompetencies_Result1>("sp_CACompetency_GetAllEmployeeCompetencies", employeeIDParameter);
        }
    
        public virtual ObjectResult<sp_CACompetency_GetUnAssigned_CompetencyDefinitions_Result> sp_CACompetency_GetUnAssigned_CompetencyDefinitions(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetUnAssigned_CompetencyDefinitions_Result>("sp_CACompetency_GetUnAssigned_CompetencyDefinitions", employeeIDParameter);
        }
    
        public virtual int sp_CACompetency_AddCompetency_toEmployeeSnapshot(Nullable<int> employeeID, Nullable<int> compDefHeaderID, Nullable<int> userID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var compDefHeaderIDParameter = compDefHeaderID.HasValue ?
                new ObjectParameter("CompDefHeaderID", compDefHeaderID) :
                new ObjectParameter("CompDefHeaderID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CACompetency_AddCompetency_toEmployeeSnapshot", employeeIDParameter, compDefHeaderIDParameter, userIDParameter);
        }
    
        public virtual int sp_CACompetency_DeleteCompetency_fromEmployeeSnapshot(Nullable<int> employeeID, Nullable<int> compDefHeaderID, Nullable<int> userID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var compDefHeaderIDParameter = compDefHeaderID.HasValue ?
                new ObjectParameter("CompDefHeaderID", compDefHeaderID) :
                new ObjectParameter("CompDefHeaderID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CACompetency_DeleteCompetency_fromEmployeeSnapshot", employeeIDParameter, compDefHeaderIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<sp_sys_GetMobileLogin_Result> sp_sys_GetMobileLogin(string lastSix)
        {
            var lastSixParameter = lastSix != null ?
                new ObjectParameter("LastSix", lastSix) :
                new ObjectParameter("LastSix", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_sys_GetMobileLogin_Result>("sp_sys_GetMobileLogin", lastSixParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_CACompetency_CreateEmployeeAssessment(Nullable<int> compDefHeaderID, Nullable<int> employeeID, Nullable<int> assessorID)
        {
            var compDefHeaderIDParameter = compDefHeaderID.HasValue ?
                new ObjectParameter("CompDefHeaderID", compDefHeaderID) :
                new ObjectParameter("CompDefHeaderID", typeof(int));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var assessorIDParameter = assessorID.HasValue ?
                new ObjectParameter("AssessorID", assessorID) :
                new ObjectParameter("AssessorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_CACompetency_CreateEmployeeAssessment", compDefHeaderIDParameter, employeeIDParameter, assessorIDParameter);
        }
    
        public virtual int sp_CACompetency_UpdateEmpTaskCompetency(Nullable<int> competencyAssessment_DetailID, Nullable<bool> isCompetent, Nullable<int> employeeID, string note)
        {
            var competencyAssessment_DetailIDParameter = competencyAssessment_DetailID.HasValue ?
                new ObjectParameter("CompetencyAssessment_DetailID", competencyAssessment_DetailID) :
                new ObjectParameter("CompetencyAssessment_DetailID", typeof(int));
    
            var isCompetentParameter = isCompetent.HasValue ?
                new ObjectParameter("IsCompetent", isCompetent) :
                new ObjectParameter("IsCompetent", typeof(bool));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CACompetency_UpdateEmpTaskCompetency", competencyAssessment_DetailIDParameter, isCompetentParameter, employeeIDParameter, noteParameter);
        }
    
        public virtual int sp_CACompetency_CompleteCompetency(Nullable<int> competencyAssessmentID, Nullable<int> employeeID, string note)
        {
            var competencyAssessmentIDParameter = competencyAssessmentID.HasValue ?
                new ObjectParameter("CompetencyAssessmentID", competencyAssessmentID) :
                new ObjectParameter("CompetencyAssessmentID", typeof(int));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CACompetency_CompleteCompetency", competencyAssessmentIDParameter, employeeIDParameter, noteParameter);
        }
    
        public virtual ObjectResult<sp_CACompetency_FinalizeCompetency_Result> sp_CACompetency_FinalizeCompetency(Nullable<int> competencyAssessmentID, Nullable<int> assessorID, string note, Nullable<int> lastSix)
        {
            var competencyAssessmentIDParameter = competencyAssessmentID.HasValue ?
                new ObjectParameter("CompetencyAssessmentID", competencyAssessmentID) :
                new ObjectParameter("CompetencyAssessmentID", typeof(int));
    
            var assessorIDParameter = assessorID.HasValue ?
                new ObjectParameter("AssessorID", assessorID) :
                new ObjectParameter("AssessorID", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var lastSixParameter = lastSix.HasValue ?
                new ObjectParameter("LastSix", lastSix) :
                new ObjectParameter("LastSix", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_FinalizeCompetency_Result>("sp_CACompetency_FinalizeCompetency", competencyAssessmentIDParameter, assessorIDParameter, noteParameter, lastSixParameter);
        }
    
        public virtual ObjectResult<sp_CACompetency_GetEmployeeAssessment_Result> sp_CACompetency_GetEmployeeAssessment(Nullable<int> competencyAssessmentID)
        {
            var competencyAssessmentIDParameter = competencyAssessmentID.HasValue ?
                new ObjectParameter("CompetencyAssessmentID", competencyAssessmentID) :
                new ObjectParameter("CompetencyAssessmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetEmployeeAssessment_Result>("sp_CACompetency_GetEmployeeAssessment", competencyAssessmentIDParameter);
        }
    
        public virtual ObjectResult<sp_CACompetency_GetAssessor_Assessments_Result> sp_CACompetency_GetAssessor_Assessments(Nullable<int> assessorID, Nullable<int> employeeID)
        {
            var assessorIDParameter = assessorID.HasValue ?
                new ObjectParameter("AssessorID", assessorID) :
                new ObjectParameter("AssessorID", typeof(int));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetAssessor_Assessments_Result>("sp_CACompetency_GetAssessor_Assessments", assessorIDParameter, employeeIDParameter);
        }
    
        public virtual ObjectResult<sp_CACompetency_EmployeeIsAdmin_Result> sp_CACompetency_EmployeeIsAdmin(Nullable<int> userID, Nullable<int> employeeId)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_EmployeeIsAdmin_Result>("sp_CACompetency_EmployeeIsAdmin", userIDParameter, employeeIdParameter);
        }
    
        [DbFunction("SSITrainingEntities", "Split")]
        public virtual IQueryable<string> Split(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[SSITrainingEntities].[Split](@String, @Delimiter)", stringParameter, delimiterParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CompDefHeader_Insert(string description, Nullable<int> userID, string jobTitles, string jobRoles, string jobResponsibilities, Nullable<int> trainingTypeID)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var jobTitlesParameter = jobTitles != null ?
                new ObjectParameter("JobTitles", jobTitles) :
                new ObjectParameter("JobTitles", typeof(string));
    
            var jobRolesParameter = jobRoles != null ?
                new ObjectParameter("JobRoles", jobRoles) :
                new ObjectParameter("JobRoles", typeof(string));
    
            var jobResponsibilitiesParameter = jobResponsibilities != null ?
                new ObjectParameter("JobResponsibilities", jobResponsibilities) :
                new ObjectParameter("JobResponsibilities", typeof(string));
    
            var trainingTypeIDParameter = trainingTypeID.HasValue ?
                new ObjectParameter("TrainingTypeID", trainingTypeID) :
                new ObjectParameter("TrainingTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CompDefHeader_Insert", descriptionParameter, userIDParameter, jobTitlesParameter, jobRolesParameter, jobResponsibilitiesParameter, trainingTypeIDParameter);
        }
    
        public virtual ObjectResult<sp_CACompetency_GetManagerCompetency_Access_Result> sp_CACompetency_GetManagerCompetency_Access(Nullable<int> employeeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CACompetency_GetManagerCompetency_Access_Result>("sp_CACompetency_GetManagerCompetency_Access", employeeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_CACompetency_TwentyFourHourCheck(Nullable<int> employeeID, Nullable<int> compDefHeaderID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var compDefHeaderIDParameter = compDefHeaderID.HasValue ?
                new ObjectParameter("CompDefHeaderID", compDefHeaderID) :
                new ObjectParameter("CompDefHeaderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_CACompetency_TwentyFourHourCheck", employeeIDParameter, compDefHeaderIDParameter);
        }
    }
}
